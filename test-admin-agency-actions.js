const axios = require('axios');

const testAdminAgencyActions = async () => {
  try {
    console.log('üß™ Test Admin Agency Management...');
    
    const baseURL = 'http://localhost:5001/api/agencies';
    
    // Fake admin token - trong th·ª±c t·∫ø c·∫ßn login admin tr∆∞·ªõc
    const adminHeaders = {
      'Authorization': 'Bearer fake-admin-token',
      'Content-Type': 'application/json'
    };

    // 1. Test l·∫•y danh s√°ch agencies
    console.log('\n1Ô∏è‚É£ Test GET /api/agencies (danh s√°ch)');
    try {
      const response = await axios.get(`${baseURL}?status=approved`, { 
        headers: adminHeaders 
      });
      console.log('‚úÖ Danh s√°ch agencies:', response.data);
    } catch (error) {
      console.log('‚ùå L·ªói l·∫•y danh s√°ch:', error.response?.data || error.message);
    }

    // 2. Test kh√≥a agency 
    console.log('\n2Ô∏è‚É£ Test PUT /api/agencies/toggle-lock/:id (kh√≥a)');
    const testAgencyId = 'test-agency-id'; // Thay b·∫±ng ID th·∫≠t
    try {
      const response = await axios.put(`${baseURL}/toggle-lock/${testAgencyId}`, {
        action: 'lock'
      }, { headers: adminHeaders });
      console.log('‚úÖ Kh√≥a agency:', response.data);
    } catch (error) {
      console.log('‚ùå L·ªói kh√≥a agency:', error.response?.data || error.message);
    }

    // 3. Test m·ªü kh√≥a agency
    console.log('\n3Ô∏è‚É£ Test PUT /api/agencies/toggle-lock/:id (m·ªü kh√≥a)');
    try {
      const response = await axios.put(`${baseURL}/toggle-lock/${testAgencyId}`, {
        action: 'unlock'
      }, { headers: adminHeaders });
      console.log('‚úÖ M·ªü kh√≥a agency:', response.data);
    } catch (error) {
      console.log('‚ùå L·ªói m·ªü kh√≥a agency:', error.response?.data || error.message);
    }

    // 4. Test x√≥a soft delete
    console.log('\n4Ô∏è‚É£ Test DELETE /api/agencies/:id (soft delete)');
    try {
      const response = await axios.delete(`${baseURL}/${testAgencyId}`, {
        headers: adminHeaders,
        data: { permanently: false }
      });
      console.log('‚úÖ Soft delete agency:', response.data);
    } catch (error) {
      console.log('‚ùå L·ªói soft delete:', error.response?.data || error.message);
    }

    // 5. Test x√≥a vƒ©nh vi·ªÖn (s·∫Ω l·ªói v√¨ c√≥ r√†ng bu·ªôc)
    console.log('\n5Ô∏è‚É£ Test DELETE /api/agencies/:id (permanent delete)');
    try {
      const response = await axios.delete(`${baseURL}/${testAgencyId}`, {
        headers: adminHeaders,
        data: { permanently: true }
      });
      console.log('‚úÖ Permanent delete agency:', response.data);
    } catch (error) {
      console.log('‚ùå L·ªói permanent delete (expected):', error.response?.data || error.message);
    }

  } catch (error) {
    console.error('‚ùå L·ªói t·ªïng qu√°t:', error.message);
  }
};

testAdminAgencyActions();
