const axios = require('axios');

async function testHotelLocationAPI() {
  try {
    const baseURL = 'http://localhost:5001/api';
    
    console.log('üè® Test Hotel-Location API endpoints...\n');
    
    // 1. Test l·∫•y t·∫•t c·∫£ kh√°ch s·∫°n v·ªõi ƒë·ªãa ƒëi·ªÉm
    console.log('1. GET /api/hotel-locations - L·∫•y t·∫•t c·∫£ kh√°ch s·∫°n v·ªõi ƒë·ªãa ƒëi·ªÉm');
    const allHotelsResponse = await axios.get(`${baseURL}/hotel-locations`);
    
    console.log(`   Status: ${allHotelsResponse.status}`);
    console.log(`   T√¨m th·∫•y ${allHotelsResponse.data.data.length} kh√°ch s·∫°n`);
    
    allHotelsResponse.data.data.slice(0, 2).forEach(hotel => {
      const locationName = hotel.location ? hotel.location.name : 'Ch∆∞a g√°n ƒë·ªãa ƒëi·ªÉm';
      console.log(`   - ${hotel.ten_khach_san} t·∫°i ${locationName}`);
    });
    
    // 2. Test l·ªçc kh√°ch s·∫°n theo ƒë·ªãa ƒëi·ªÉm
    const locationId = '1cc63272-da3f-48b8-b197-199d6ec8a996'; // Ph√∫ Qu·ªëc
    console.log(`\n2. GET /api/hotel-locations/location/${locationId} - L·ªçc kh√°ch s·∫°n theo ƒë·ªãa ƒëi·ªÉm`);
    
    const hotelsByLocationResponse = await axios.get(`${baseURL}/hotel-locations/location/${locationId}`);
    
    console.log(`   Status: ${hotelsByLocationResponse.status}`);
    console.log(`   Message: ${hotelsByLocationResponse.data.message}`);
    console.log(`   ƒê·ªãa ƒëi·ªÉm: ${hotelsByLocationResponse.data.data.location.name}`);
    console.log(`   S·ªë kh√°ch s·∫°n: ${hotelsByLocationResponse.data.data.hotels.length}`);
    
    hotelsByLocationResponse.data.data.hotels.forEach(hotel => {
      console.log(`   - ${hotel.ten_khach_san}`);
    });
    
    // 3. Test update location cho kh√°ch s·∫°n
    const hotelId = 'hotel-dalat-a'; // ID c·ªßa m·ªôt kh√°ch s·∫°n
    const newLocationId = '61d461a7-c081-4585-869e-063f09cdb60e'; // ƒê√† L·∫°t
    
    console.log(`\n3. PUT /api/hotel-locations/${hotelId}/location - G√°n kh√°ch s·∫°n v√†o ƒê√† L·∫°t`);
    
    const updateResponse = await axios.put(`${baseURL}/hotel-locations/${hotelId}/location`, {
      location_id: newLocationId
    });
    
    console.log(`   Status: ${updateResponse.status}`);
    console.log(`   Message: ${updateResponse.data.message}`);
    console.log(`   Kh√°ch s·∫°n: ${updateResponse.data.data.ten_khach_san}`);
    console.log(`   ƒê·ªãa ƒëi·ªÉm m·ªõi: ${updateResponse.data.data.location ? updateResponse.data.data.location.name : 'Kh√¥ng c√≥'}`);
    
    console.log('\n‚úÖ Test API ho√†n th√†nh! T·∫•t c·∫£ endpoints ho·∫°t ƒë·ªông t·ªët.');
    
  } catch (error) {
    if (error.response) {
      console.error(`‚ùå API Error: ${error.response.status}`);
      console.error('Response:', error.response.data);
    } else {
      console.error('‚ùå Network Error:', error.message);
    }
  } finally {
    process.exit();
  }
}

testHotelLocationAPI();
